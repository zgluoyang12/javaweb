<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd" default-lazy-init="false">
		
	
	<context:property-placeholder location="classpath:app.properties,classpath:redis.properties" file-encoding="UTF-8" />
		<context:property-placeholder location="classpath:redis.properties" file-encoding="UTF-8" />
		<util:properties id="redis" location="classpath:/redis.properties"></util:properties>
		<util:properties id="app" location="classpath:/app.properties"></util:properties>
		
<!-- 		 <bean -->
<!--         		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
<!-- 	        <property name="locations"> -->
<!-- 	            <list> -->
<!-- 	                <value>classpath:app.properties</value> -->
<!-- 	                <value>classpath:redis.properties</value> -->
<!-- 	            </list> -->
<!-- 	        </property> -->
<!--     	</bean> -->
		
		<context:component-scan base-package="com.application.**"></context:component-scan>
		<!-- hibernate -->
		<bean name="ppasLocalDruidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<property name="driverClassName" value="${mysql.driver}"/>
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
	
			<property name="maxActive" value="20" />
			<property name="initialSize" value="1" />
			<property name="maxWait" value="60000" />
			<property name="minIdle" value="1" />
	
			<property name="timeBetweenEvictionRunsMillis" value="50000" />
			<property name="minEvictableIdleTimeMillis" value="120000" />
	
			<property name="validationQuery" value="SELECT 'x'" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
	
			<property name="poolPreparedStatements" value="true" />
			<property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
			<!-- 打开removeAbandoned功能 -->
			<property name="removeAbandoned" value="true" />
			<property name="removeAbandonedTimeout" value="180" />
		</bean>
		<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="dataSource" ref="ppasLocalDruidDataSource" />
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">${hibernate.dialect.mysql}</prop>
					<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.format_sql">false</prop>
					<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				</props>
			</property>
			<!-- 注解方式配置 -->
			<property name="packagesToScan">
				<list>
					<value>com.application.*.*</value>
				</list>
			</property>
		</bean>
		<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<constructor-arg ref="ppasLocalDruidDataSource"/>
		</bean>
		<!-- redis -->
		<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
<!-- 	        <property name="usePool" value="true"></property> -->
				<property name="maxIdle" value="${redis.maxIdle}" />
				<property name="testOnBorrow" value="${redis.testOnBorrow}" />
    	</bean>
    	<bean id="jedisConnectionFactory"
	        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	        <property name="hostName" value="${redis.host}" />
	        <property name="port" value="${redis.port}" />
	        <property name="password" value="${redis.pass}" />
	        <property name="database" value="13" />
	        <property name="poolConfig" ref="poolConfig" />
   		 </bean>
   		  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
       		 <property name="connectionFactory" ref="jedisConnectionFactory" />
       		 <property name="keySerializer" ref="stringRedisSerializer"></property>
       		 <property name="valueSerializer" ref="stringRedisSerializer"></property>
   		 </bean>
   		 <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" /> 
     	 
     	 <!-- redis消息队列 -->
     	 <bean id="redisMsgListener" class="com.application.service.RedisMessageListener"/>
		 <bean id="redisc" class="org.springframework.data.redis.listener.PatternTopic" />
		 
		 <bean id="messageListenerAdapter" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
	        <property name="serializer" ref="stringRedisSerializer" />
	        <property name="stringSerializer" ref="stringRedisSerializer"/>
	        <property name="delegate" ref="redisMsgListener" /> <!--订阅者/目的地-->
<!-- 	        <property name="defaultListenerMethod" value="receiveMessage"/> 默认接收方法 -->
   		 </bean>
<!--    		 <bean id="redisMessageListenerContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer"> -->
<!-- 	        <property name="connectionFactory" ref="jedisConnectionFactory"/> -->
<!-- 	        <property name="topicSerializer" ref="stringRedisSerializer"/> 通道序列化 -->
<!-- 	        <property name="messageListeners"> -->
<!-- 	            <map key-type="org.springframework.data.redis.connection.MessageListener" value-type="org.springframework.data.redis.listener.PatternTopic"> -->
<!-- 	                <entry key-ref="messageListenerAdapter"  value-ref="redisc"/> -->
<!-- 	            </map> -->
<!-- 	        </property> -->
<!--    		 </bean> -->
<!--    		  <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"> -->
<!--         	<constructor-arg name="redisOperations" ref="redisTemplate" /> -->
<!--     		 <property name="defaultExpiration" value="${redis.expiration}" />  --> 
<!--     	   </bean> -->

    <!-- 配置RedisCacheConfig -->
<!--     <bean id="redisCacheConfig" class="com.ssm.utils.RedisCacheConfig"> -->
<!--         <constructor-arg ref="jedisConnectionFactory" /> -->
<!--         <constructor-arg ref="redisTemplate" /> -->
<!--         <constructor-arg ref="redisCacheManager" /> -->
<!--     </bean> -->
		<import resource="shiro.xml" />
	</beans>